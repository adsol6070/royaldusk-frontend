services:
  dashboard:
    build:
      context: ./dashboard
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./dashboard:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    command: ["npm", "run", "dev"]

  website:
    build:
      context: ./website
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./website:/app
      - /app/node_modules
    environment:
      - NODE_ENV=production
    command: ["npm", "run", "start"]

  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - dashboard
      - website
      - certbot
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - letsencrypt:/etc/letsencrypt
      - ./html:/var/www/html
    restart: always

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - letsencrypt:/etc/letsencrypt
      - ./html:/var/www/html
    entrypoint: ["/bin/sh", "-c"]
    command: >
      "if [ ! -f /etc/letsencrypt/live/royaldusk.com/fullchain.pem ]; then 
        certbot certonly --webroot --webroot-path=/var/www/html 
        --email go@royaldusk.com --agree-tos --no-eff-email 
        -d royaldusk.com -d www.royaldusk.com;
      fi
      && trap exit TERM; while :; do certbot renew --quiet; sleep 12h & wait $${!}; done"

volumes:
  letsencrypt:
